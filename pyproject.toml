[tool.mypy]
python_version = "3.7"
exclude = [
    "tests",
    "venv",
]
ignore_missing_imports = true

[tool.ruff]
select = ["E", "F"]
ignore = []
fixable = ["ALL"]
unfixable = []
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
line-length = 117
target-version = "py37"
fix = true

[tool.ruff.per-file-ignores]
"tests/*" = ["SLF001"]
".github/*" = ["INP001"]

[tool.ruff.mccabe]
max-complexity = 10

[tool.black]
line-length = 117
target-version = ["py37"]

[tool.black.include]
paths = [
    "examples",
    "themoviedb",
    "tests",
]

[tool.isort]
profile = "black"

[tool.bandit]
exclude_dirs = ["venv",]
skips = ["B101",]

[tool.pytest.ini_options]
minversion = 7.0
testpaths = [
    "tests",
]
required_plugins = [
    "pytest-cov>=4.1.0",
    "pytest-randomly>=3.12.0",
    "pytest-sugar>=0.9.7",
]
addopts = [
    "-vvv",
    "--maxfail=1",
    "--cov=themoviedb",
    "--cov-fail-under=80",
]

[tool.coverage.report]
exclude_also = [
    "def __repr__",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
    "@(typing\\.)?overload"
]
